{"ast":null,"code":"var _jsxFileName = \"/Users/ashpawad/Documents/Practice/Udemy/React-Projects/star-wars/src/App.js\";\nimport React, { useState } from 'react';\nimport DotLoader from \"react-spinners/DotLoader\";\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport DropDown from './components/DropDown';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [inputList, setInputList] = useState([{\n    id: 1,\n    name: 'Ashutosh'\n  }, {\n    id: 2,\n    name: 'Avik'\n  }, {\n    id: 3,\n    name: 'Yash'\n  }]);\n\n  const fetchMovies = async () => {\n    setIsLoading(true); // try {\n\n    const resp = await fetch('https://swapi.dev/api/films');\n    const data = await resp.json();\n    const transformedMovies = data && data.results.map(movie => ({\n      id: movie.episode_id,\n      title: movie.title,\n      openingText: movie.opening_crawl,\n      releaseDate: movie.release_date\n    }));\n    setMovies(transformedMovies); // } catch(error) {\n    //   console.log('ERROR');\n    // }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: fetchMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DropDown, {\n    inputList: inputList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(DotLoader, {\n    loading: true,\n    color: \"#0CE0CA\",\n    size: 60,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), !isLoading && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ashpawad/Documents/Practice/Udemy/React-Projects/star-wars/src/App.js"],"names":["React","useState","DotLoader","MoviesList","DropDown","App","isLoading","setIsLoading","movies","setMovies","inputList","setInputList","id","name","fetchMovies","resp","fetch","data","json","transformedMovies","results","map","movie","episode_id","title","openingText","opening_crawl","releaseDate","release_date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAC;AAC1CW,IAAAA,EAAE,EAAE,CADsC;AAE1CC,IAAAA,IAAI,EAAE;AAFoC,GAAD,EAGxC;AACDD,IAAAA,EAAE,EAAE,CADH;AAEDC,IAAAA,IAAI,EAAE;AAFL,GAHwC,EAMxC;AACDD,IAAAA,EAAE,EAAE,CADH;AAEDC,IAAAA,IAAI,EAAE;AAFL,GANwC,CAAD,CAA1C;;AAWA,QAAMC,WAAW,GAAG,YAAY;AAC9BP,IAAAA,YAAY,CAAC,IAAD,CAAZ,CAD8B,CAE9B;;AACE,UAAMQ,IAAI,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAxB;AACA,UAAMC,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACA,UAAMC,iBAAiB,GAAGF,IAAI,IAAIA,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,KAAD,KACjD;AACEV,MAAAA,EAAE,EAAEU,KAAK,CAACC,UADZ;AAEEC,MAAAA,KAAK,EAAEF,KAAK,CAACE,KAFf;AAGEC,MAAAA,WAAW,EAAEH,KAAK,CAACI,aAHrB;AAIEC,MAAAA,WAAW,EAAEL,KAAK,CAACM;AAJrB,KADiD,CAAjB,CAAlC;AAQAnB,IAAAA,SAAS,CAACU,iBAAD,CAAT,CAb4B,CAc9B;AACA;AACA;;AACAZ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAlBD;;AAoBA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEO,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEJ,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,SAAS,iBACR,oBAAC,SAAD;AACA,IAAA,OAAO,MADP;AAEA,IAAA,KAAK,EAAC,SAFN;AAGA,IAAA,IAAI,EAAE,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOG,CAACA,SAAD,iBAAe,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPlB,CAPF,CADF;AAmBD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport DotLoader from \"react-spinners/DotLoader\";\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport DropDown from './components/DropDown';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [inputList, setInputList] = useState([{\n    id: 1,\n    name: 'Ashutosh'\n  }, {\n    id: 2,\n    name: 'Avik'\n  }, {\n    id: 3,\n    name: 'Yash'\n  }])\n\n  const fetchMovies = async () => {\n    setIsLoading(true);\n    // try {\n      const resp = await fetch('https://swapi.dev/api/films');\n      const data = await resp.json();\n      const transformedMovies = data && data.results.map((movie) => (\n        {\n          id: movie.episode_id,\n          title: movie.title,\n          openingText: movie.opening_crawl,\n          releaseDate: movie.release_date,\n        }\n      ));\n      setMovies(transformedMovies);\n    // } catch(error) {\n    //   console.log('ERROR');\n    // }\n    setIsLoading(false);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button type='button' onClick={fetchMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        <DropDown inputList={inputList} />\n      </section>\n      <section>\n      {isLoading && \n        <DotLoader\n        loading\n        color='#0CE0CA'\n        size={60} \n        />}\n        {!isLoading && (<MoviesList movies={movies} />)}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}